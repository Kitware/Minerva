include ../layout/panelMixins.jade
include ../widgets/legendWidget.jade

+panel-title('Session Layers', 'm-layer-panel')

+panel-content('collapse in')
  .layersList
    ul.datasets
      each dataset, index in datasets
        li.dataset&attributes({'m-dataset-id': dataset.get('_id')})= dataset.get('name')
          if dataset.get('geoError')
            i.icon-attention.m-remove-dataset-from-layer&attributes({'m-dataset-id': dataset.get('_id')})
          else
            i.icon-eye.m-toggle-dataset&attributes({'m-dataset-id': dataset.get('_id')})
            .m-push-right
              if dataset.getDatasetType() === 'geojson' || dataset.getDatasetType() === 'geojson-timeseries'
                i.icon-download.m-download-geojson&attributes({'m-dataset-id': dataset.get('_id')})
              i.icon-trash.m-remove-dataset-from-layer&attributes({'m-dataset-id': dataset.get('_id')})
          .m-layer-control-container
            each option in layersOrderOptions
              if ((index === 0 && option.class.indexOf('up') > -1) || (index === datasets.length - 1 && option.class.indexOf('down') > -1 ))
                - var disable = 'm-disable-text'
              else
                - var disable = ''
              i(title='#{option.title}' class='icon-angle-#{option.class} m-order-layer #{disable}')&attributes({'m-dataset-id': dataset.get('_id'), 'm-order-option': option.method})
            .m-layer-control-container
              i.icon-ajust
              input.m-opacity-range&attributes({'m-dataset-id': dataset.get('_id')})(type='range', min=0, max=1, step=0.01, value=dataset.get('opacity'))
              - var renderType = dataset.getGeoRenderType()
              if (renderType === 'wms')
                - var legend = 'data:image/png;base64,' + dataset.metadata().legend
                +legend(dataset.get('_id'), legend)
            if dataset.getDatasetType() === 'geojson-timeseries'
              .m-layer-control-container
                include ../widgets/animationControls.jade
                +animationControls(dataset, {id: dataset.get('_id')})

