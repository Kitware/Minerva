language: python
python:
    - "2.7"

env:
  - MINERVA_TEST_GROUP=server
  - MINERVA_TEST_GROUP=client

cache:
  directories:
  - $HOME/virtualenv/python2.7.9
  - $HOME/.cache

sudo: false

compiler:
    - gcc

addons:
  apt:
    packages:
    - libpng12-dev
    - libgdal1-dev
    - pkg-config
    - libnetcdf-dev

before_install:
    - export CXX=g++-4.8
    - nvm install v6
    - nvm use v6
    - pip install -U pip virtualenv setuptools
    - DATABASE_ASSETSTORE_VERSION="73651be9d133178dc1a791c7bec8b20071e08664"

    # minerva has been cloned to Kitware/minerva by travis
    # girder needs to be cloned and then minerva moved under girder
    - cd $HOME/build
    # remove existing girder dir, it remains from caching operations
    - rm -rf girder
    - git clone https://github.com/girder/girder.git
    - cd girder
    # - git checkout `cat $TRAVIS_BUILD_DIR/.girder-version`
    - cd $HOME/build
    - mv Kitware/minerva girder/plugins
    - cp girder/plugins/minerva/server/conf/minerva.dist.cfg girder/plugins/minerva/server/conf/minerva.local.cfg

    - cd girder
    - export GIRDER_SOURCE_DIR="$PWD"
    # copy the placeholder bsve credentials, needed even though we mock bsve api calls
    - cp plugins/minerva/server/jobs/bsve.json.in plugins/minerva/server/jobs/bsve.json

    # Show the memory state; this lets us more quickly determine when the
    # travis environment is bad
    - vmstat
    - export IGNORE_PLUGINS=celery_jobs,geospatial,google_analytics,hdfs_assetstore,jquery_widgets,metadata_extractor,mongo_search,oauth,provenance,thumbnails,user_quota,vega;
    - if [ ${TRAVIS_PYTHON_VERSION:0:1} == "3" ]; then export PY3="true"; else export PY2="true"; fi
    - if [ -n "${PY3}" ]; then export MONGO_VERSION=3.0.2; export PY_COVG="OFF"; else export MONGO_VERSION=2.6.9; export PY_COVG="ON"; export DEPLOY=true; fi

    # mongo
    - CACHE=$HOME/.cache source $HOME/build/girder/scripts/install_mongo.sh
    - mkdir /tmp/db
    - mongod --dbpath=/tmp/db >/dev/null 2>/dev/null &
    - mongod --version

    # cmake
    - CACHE=$HOME/.cache CMAKE_VERSION=3.1.0 CMAKE_SHORT_VERSION=3.1 source $HOME/build/girder/scripts/install_cmake.sh

    # install database_assetstore plugin
    - DB_ASSETSTORE_DIR="${GIRDER_SOURCE_DIR}/plugins/database_assetstore"
    - git clone https://github.com/OpenGeoscience/database_assetstore.git "${DB_ASSETSTORE_DIR}" && git -C "${DB_ASSETSTORE_DIR}" checkout $DATABASE_ASSETSTORE_VERSION
    - pip install -r "${DB_ASSETSTORE_DIR}/requirements.txt" -U

install:
    - cd $HOME/build/girder
    - mkdir _build
    - export GIRDER_SOURCE_DIR="$PWD"
    - export GIRDER_BUILD_DIR="$PWD/_build"
    # - pip install -r "${GIRDER_SOURCE_DIR}/plugins/minerva/cmake/travis-pip-freeze.txt" -U

    - cd /home/travis/build/girder
    # handle caching of npm modules
    # - mkdir -p $HOME/.cache/node_modules || true
    # - ln -sf $HOME/.cache/node_modules .
    - npm install -g npm
    # - npm prune
    # build and install girder
    - python setup.py develop
    - pip install -r requirements-dev.txt
    - pip install -r plugins/minerva/requirements.txt
    - pip install -r plugins/minerva/requirements-dev.txt
    - girder-install web --dev --plugins minerva
    # replace girder's ctest config with minerva's
    - cp "$GIRDER_SOURCE_DIR/plugins/minerva/cmake/CTestConfig.cmake" .

script:
    - JASMINE_TIMEOUT=15000 PYTHONPATH="$PYTHONPATH:$GIRDER_SOURCE_DIR/plugins/minerva" ctest -S "$GIRDER_SOURCE_DIR/plugins/minerva/cmake/travis_continuous.cmake" -VV || true
    - if [ -f _build/test_failed ] ; then false ; fi
